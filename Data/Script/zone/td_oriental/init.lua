--[[
	init.lua
	Created: 12/16/2022 07:24:02
	Description: Autogenerated script file for the map td_oriental.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local td_oriental = {}

-------------------------------
-- Zone Callbacks
-------------------------------
---CURZONESCR.Init
--Engine callback function
function td_oriental.Init(zone)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PrintInfo("=>> Init_td_oriental")
end

---CURZONESCR.EnterSegment
--Engine callback function
function td_oriental.EnterSegment(zone, rescuing, segmentID, mapID)
  if rescuing ~= true then
	COMMON.BeginDungeon(zone.ID, segmentID, mapID)
  end
end

---CURZONESCR.ExitSegment
--Engine callback function
function td_oriental.ExitSegment(zone, result, rescue, segmentID, mapID)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PrintInfo("=>> ExitSegment_td_oriental result "..tostring(result).." segment "..tostring(segmentID))
  
  --first check for rescue flag; if we're in rescue mode then take a different path
  COMMON.ExitDungeonMissionCheck(zone.ID, segmentID)
  if rescue == true then
	COMMON.EndRescue(zone, result, segmentID)
  elseif result ~= RogueEssence.Data.GameProgress.ResultType.Cleared then
	COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
  else
	if segmentID == 0 then
	  if SV.hiddensidequest.celebi == nil then
	    COMMON.EndDungeonDay(result, 'td_throwback_land', -1, 2, 2)
	  else
	    if SV.hiddensidequest.celebi > 0 and SV.hiddensidequest.celebi < 3 then
		  if SV.hiddensidequest.celebi == 2 then
		    GAME:ContinueDungeon('td_oriental', 1, 0, 0)
		  else
		    GAME:EnterGroundMap("event_oriental_celebi", "StartPlayer")
		  end
	    else
		  COMMON.EndDungeonDay(result, 'td_throwback_land', -1, 2, 2)
	    end
	  end
	else
	  if segmentID == 1 then
		GAME:EnterGroundMap("event_oriental_celebi", "StartPlayer")
	  else
		PrintInfo("No exit procedure found!")
		COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
	  end
	end
  end
end

---CURZONESCR.Rescued
--Engine callback function
function td_oriental.Rescued(zone, name, mail)
  COMMON.Rescued(zone, name, mail)
end

return td_oriental

