--[[
    init.lua
    Created: 10/23/2023 13:23:30
    Description: Autogenerated script file for the map td_pinkandblue.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local td_pinkandblue = {}

-------------------------------
-- Zone Callbacks
-------------------------------
---td_pinkandblue.Init
--Engine callback function
function td_pinkandblue.Init(zone)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PrintInfo("=>> Init_td_pinkandblue")
end

---td_pinkandblue.EnterSegment
--Engine callback function
function td_pinkandblue.EnterSegment(zone, rescuing, segmentID, mapID)
  if rescuing ~= true then
    COMMON.BeginDungeon(zone.ID, segmentID, mapID)
  end
end

---td_pinkandblue.ExitSegment
--Engine callback function
function td_pinkandblue.ExitSegment(zone, result, rescue, segmentID, mapID)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PrintInfo("=>> ExitSegment_td_pinkandblue result "..tostring(result).." segment "..tostring(segmentID))
  
  --first check for rescue flag; if we're in rescue mode then take a different path
  COMMON.ExitDungeonMissionCheck(zone.ID, segmentID)
  if rescue == true then
    COMMON.EndRescue(zone, result, segmentID)
  elseif result ~= RogueEssence.Data.GameProgress.ResultType.Cleared then
    COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
  else
    if segmentID == 0 then
      COMMON.EndDungeonDay(result, 'td_throwback_land', -1, 2, 2)
    else
      PrintInfo("No exit procedure found!")
      COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
    end
  end
end

---td_pinkandblue.Rescued
--Engine callback function
function td_pinkandblue.Rescued(zone, name, mail)
  COMMON.Rescued(zone, name, mail)
end

return td_pinkandblue

