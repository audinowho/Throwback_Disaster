--[[
    init.lua
    Created: 12/12/2022 17:52:18
    Description: Autogenerated script file for the map amusement_castle_ruins.
]]--
-- Commonly included lua functions and data
require 'common'
require 'commonex'

-- Package name
local amusement_castle_ruins = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---CURMAPSCR.Init
--Engine callback function
function amusement_castle_ruins.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  GROUND:RefreshPlayer()

end

---CURMAPSCR.Enter
--Engine callback function
function amusement_castle_ruins.Enter(map)

  if SV.global_quest.StoryProgression == 21 then
    SV.global_quest.StoryProgression = 22
	GAME:CutsceneMode(true)
	local kecleon = CH("Kecleon")
	local gapori = CH("Gapori")
	local misdreavus = CH("Misdreavus")
	local zigzagoon = CH("Zigzagoon")
	GROUND:Hide("Zigzagoon")
	GROUND:Hide("Misdreavus")
	GROUND:TeleportTo(CH('PLAYER'), 246, 157, Direction.Up)
	GAME:FadeIn(120)
	SV.checkpoint = 
	{
	  Zone    = 'td_throwback_land', Segment  = -1,
	  Map  = 6, Entry  = 1
	}
	GROUND:MoveToPosition(kecleon, 231, 195, false, 2)
	GROUND:CharAnimateTurn(kecleon, Direction.Up, 4, true)
	GROUND:CharAnimateTurn(CH("PLAYER"), Direction.Down, 4, false)
	UI:SetSpeaker(kecleon)
    UI:SetSpeakerEmotion("Sigh")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Kecleon_0']))
	GROUND:MoveToPosition(gapori, 263, 191, false, 2)
	GROUND:CharAnimateTurn(gapori, Direction.Up, 4, true)
	UI:SetSpeaker(gapori)
    UI:SetSpeakerEmotion("Sigh")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_0']))
	GROUND:CharAnimateTurn(kecleon, Direction.Right, 4, false)
	UI:SetSpeaker(kecleon)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Kecleon_1']))
	GROUND:CharAnimateTurn(gapori, Direction.Left, 4, true)
	UI:SetSpeaker(gapori)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_1']))
	SOUND:PlayBGM("Nad72. Phantom and a Rose.ogg", true)
	GROUND:Unhide("Zigzagoon")
	GROUND:Unhide("Misdreavus")
	GROUND:MoveToPosition(misdreavus, 291, 184, true, 4)
	GROUND:CharAnimateTurn(misdreavus, Direction.Left, 4, false)
	GROUND:MoveToPosition(zigzagoon, 291, 203, true, 4)
	GROUND:CharAnimateTurn(zigzagoon, Direction.Left, 4, false)
	GROUND:CharAnimateTurn(gapori, Direction.Right, 4, false)
	UI:SetSpeaker(misdreavus)
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Misdreavus_0']))
	UI:SetSpeaker(kecleon)
    UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Kecleon_2']))
	UI:SetSpeaker(misdreavus)
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Misdreavus_1']))
	UI:SetSpeaker(kecleon)
    UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Kecleon_3']))
	UI:SetSpeaker(zigzagoon)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Zigzagoon_0']))
	UI:SetSpeaker(gapori)
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_2']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_3']))
	UI:SetSpeaker(zigzagoon)
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Zigzagoon_1']))
	UI:SetSpeaker(misdreavus)
    UI:SetSpeakerEmotion("Determined")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Misdreavus_2']))
	local coro1 = TASK:BranchCoroutine(function() amusement_castle_ruins.leaving(misdreavus) end)
	local coro2 = TASK:BranchCoroutine(function() amusement_castle_ruins.leaving(zigzagoon) end)
	TASK:JoinCoroutines({coro1,coro2})
	GROUND:RemoveCharacter("Misdreavus")
	GROUND:RemoveCharacter("Zigzagoon")
	SOUND:PlayBGM("Nad120. Trouble at Night.ogg", true)
	GROUND:MoveToPosition(gapori, 301, 122, false, 2)
	GROUND:CharAnimateTurn(kecleon, Direction.Up, 4, false)
	UI:SetSpeaker(kecleon)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Kecleon_4']))
	COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("evo_kings_rock"),false,false)
	UI:SetSpeaker(kecleon)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Kecleon_5']))
	GROUND:MoveToPosition(kecleon, 244, 366, false, 3)
	GROUND:RemoveCharacter("Kecleon")
	COMMONEX.PointIncrease(15)
	GAME:CutsceneMode(false)
  else
    if SV.global_quest.StoryProgression > 24 then
	  GROUND:RemoveCharacter("Gapori")
	  GROUND:RemoveCharacter("WaitUp")
	else
	  GROUND:TeleportTo(CH('Gapori'), 301, 122, Direction.UpRight)
	end
	if SV.global_quest.StoryProgression < 29 then
      GROUND:Hide("Cim")
	end
	GROUND:RemoveCharacter("Misdreavus")
	GROUND:RemoveCharacter("Zigzagoon")
	GROUND:RemoveCharacter("Kecleon")
	GAME:FadeIn(20)
  end

end

---CURMAPSCR.Exit
--Engine callback function
function amusement_castle_ruins.Exit(map)


end

---CURMAPSCR.Update
--Engine callback function
function amusement_castle_ruins.Update(map)


end

---CURMAPSCR.GameSave
--Engine callback function
function amusement_castle_ruins.GameSave(map)


end

---CURMAPSCR.GameLoad
--Engine callback function
function amusement_castle_ruins.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function amusement_castle_ruins.leaving(character)
  GROUND:MoveToPosition(character, 243, 379, false, 2)
end

function amusement_castle_ruins.Mantine_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Mantine_0']))
end

function amusement_castle_ruins.Scyther_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Scyther_0']))
end

function amusement_castle_ruins.Cim_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Mantine_0']))
end

function amusement_castle_ruins.Cim_Action(chara, activator)
  UI:SetSpeaker(chara)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  if SV.global_quest.StoryProgression == 29 then
    SOUND:PlayBGM("NadEvent32. Hey, Cid.ogg", true)
    UI:SetSpeakerEmotion("Worried")
	chara.Data.Nickname = "Hatenna Engineer"
	UI:SetSpeaker(chara)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_0']))
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_1']))
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_2']))
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_3']))
	chara.Data.Nickname = "Cim"
	UI:SetSpeaker(chara)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_4']))
	UI:SetSpeaker(CH("Gapori"))
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_18'], SV.playername))
	UI:SetSpeaker(chara)
	UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_5']))
	UI:SetSpeaker(CH("Gapori"))
	UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_19']))
	UI:SetSpeaker(chara)
	UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_6']))
	SV.global_quest.StoryProgression = 30
  end
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cim_7']))
end

function amusement_castle_ruins.Wigglytuff_Action(chara, activator)
  UI:SetSpeaker(chara)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  if SV.global_quest.StoryProgression > 28 then
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Wigglytuff_2']))
  else
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Wigglytuff_0']))
    UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Wigglytuff_1']))
  end
end

function amusement_castle_ruins.Gapori_Action(chara, activator)
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression == 24 then
    GROUND:CharTurnToChar(chara,CH('PLAYER'))
	UI:SetSpeakerEmotion("Happy")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_17']))
  elseif SV.global_quest.StoryProgression == 23 then
    GROUND:CharTurnToChar(chara,CH('PLAYER'))
	UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_15']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_16']))
	UI:SetSpeakerEmotion("Happy")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_17']))
	SV.global_quest.StoryProgression = 24
  else
    UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_4']))
  end
end

function amusement_castle_ruins.Bellossom_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Bellossom_0']))
  UI:SetSpeakerEmotion("Joyous")
  UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Bellossom_1']),
  {STRINGS:Format(MapStrings['Answer_1']),
  STRINGS:Format(MapStrings['Answer_2']),
  STRINGS:Format(MapStrings['Answer_3'])}, 1, 4)
  UI:WaitForChoice()
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Bellossom_2']))
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Bellossom_3']))
end

function amusement_castle_ruins.WaitUp_Touch(obj, activator)
  if SV.global_quest.StoryProgression == 24 then
    local gapori = CH('Gapori')
	local player = CH('PLAYER')
    GAME:FadeOut(false, 20)
	GAME:CutsceneMode(true)
	GROUND:TeleportTo(player, 245, 291, Direction.Down)
	GAME:FadeIn(20)
	GROUND:MoveInDirection(player, Direction.Down, 48, false, 1)
	UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_5']))
	GROUND:CharAnimateTurn(player, Direction.Up, 4, false)
	GROUND:MoveToPosition(gapori, 244, 299, false, 3)
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Pain")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_6']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_7']))
	UI:SetSpeakerEmotion("Shouting")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_8']))
	UI:ResetSpeaker()
	GROUND:MoveInDirection(player, Direction.Up, 24, false, 1)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_0'], SV.playername))
	GROUND:AnimateInDirection(player, "Walk", Direction.Up, Direction.Down, 24, 1, 1)
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Happy")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_9']))
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_10']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_11']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_12']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_13']))
	UI:SetSpeakerEmotion("Joyous")
	SOUND:PlayBattleSE("TB_VOX_Gapori_LetsTry")
	GROUND:CharSetAnim(gapori, "Pose", false)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_14']))
	local mon_id = RogueEssence.Dungeon.MonsterID("tdchar_gapori", 0, "normal", Gender.Unknown)
	local g = _DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, mon_id, 5, "", 0)
	g.Nickname = 'Gapori'
	g.MetAt = "Amusement Castle"
	g.IsFounder = true
	g.OriginalUUID = "specialmember_gapori"
	g.OriginalTeam = "Gapporin"
	SV.party_members.gapori = g
	COMMONEX.SpecialCharJoined(g,"Gapori",1)
	COMMONEX.CharacterIntroduction("Joined_Gapori")
	GAME:FadeOut(false, 20)
	GAME:CutsceneMode(false)
	GROUND:RemoveCharacter("Gapori")
	GROUND:RemoveCharacter("WaitUp")
	GAME:FadeIn(20)
	SV.global_quest.StoryProgression = 25
  end
end

function amusement_castle_ruins.Exit_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  GAME:FadeOut(false, 20)
  GAME:EnterGroundMap("amusement_park", "entrance_north")
end

function amusement_castle_ruins.DungeonStair_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  GAME:FadeOut(false, 20)
  GAME:EnterGroundMap("amusement_castle_prison", "Entrance")
end

return amusement_castle_ruins

