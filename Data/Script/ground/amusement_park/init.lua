--[[
    init.lua
    Created: 11/12/2022 19:45:43
    Description: Autogenerated script file for the map amusement_park.
]]--
-- Commonly included lua functions and data
require 'common'
require 'commonex'

-- Package name
local amusement_park = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---CURMAPSCR.Init
--Engine callback function
function amusement_park.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()

end

---CURMAPSCR.Enter
--Engine callback function
function amusement_park.Enter(map)
  GROUND:Hide("Abigail")
  GROUND:Hide("Missy")
  GROUND:Hide("Gapori")
  if SV.sidequest.quest04 < 2 then
    GROUND:Hide("Tinkaton")
	GROUND:Hide("Corviknight_0")
	GROUND:Hide("Corviknight_1")
  end
  if SV.global_quest.StoryProgression > 5 then
    GROUND:Hide("Mimikyu")
  end
  if SV.sidequest.quest00 < 2 then
    GROUND:Hide("Bayleef_Davi")
  end
  if SV.global_quest.StoryProgression < 28 then
    GROUND:Hide("Indeedee")
  end
  if SV.sidequest.quest01 < 2 then
    GROUND:Hide("Cradily_Davi")
  end
  if SV.global_quest.StoryProgression < 8 or SV.global_quest.StoryProgression > 9 then
    GROUND:Hide("Powwene")
  end
  if SV.global_quest.StoryProgression < 23 then
    GROUND:Hide("ARaichu")
  end
  if SV.sidequest.quest03 > 1 and SV.sidequest.quest03 < 4 then
    GROUND:Hide("Hoppip")
  end
  if SV.global_quest.StoryProgression == 7 then
    SOUND:PlayBGM("NadEvent25. Escape.ogg", true)
    GAME:CutsceneMode(true)
    local e1=CH("Enemy1")
	local e2=CH("Enemy2")
	local poww=CH("Powwene")
	local player=CH("PLAYER")
	poww.Data.Nickname = 'Red Pow-Pow'
	e1.CollisionDisabled = true
	e2.CollisionDisabled = true
	GROUND:TeleportTo(player, 388, 818, Direction.Down)
	GROUND:TeleportTo(e1, 380, 842, Direction.Up)
	GROUND:TeleportTo(e2, 396, 842, Direction.Up)
	GAME:FadeIn(20)
	if SV.global_quest.BossWin == true then
	  local coro1 = TASK:BranchCoroutine(function() amusement_park.EnemySweat(e1) end)
	  local coro2 = TASK:BranchCoroutine(function() amusement_park.EnemySweat(e2) end)
	  SOUND:PlayBattleSE("EVT_Emote_Sweating")
	  TASK:JoinCoroutines({coro1,coro2})
	  GAME:WaitFrames(30)
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_3']))
	else
	  GROUND:CharSetEmote(player, "sweating", 1)
	  SOUND:PlayBattleSE("EVT_Emote_Sweating")
	  GAME:WaitFrames(30)
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_2']))
	  local coro1 = TASK:BranchCoroutine(function() amusement_park.Move2(e1) end)
	  local coro2 = TASK:BranchCoroutine(function() amusement_park.Move2(e2) end)
	  GROUND:AnimateInDirection(player, "Walk", Direction.Down, Direction.Up, 48, 1, 1)
	  TASK:JoinCoroutines({coro1,coro2})
	end
	SOUND:PlayBGM("", true)
	UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_0']))
	GAME:FadeOut(true, 60)
	GROUND:RemoveCharacter("Enemy1")
	GROUND:RemoveCharacter("Enemy2")
	GROUND:TeleportTo(poww, 388, 866, Direction.Up)
	GROUND:Unhide("Powwene")
	GAME:FadeIn(30)
	if SV.global_quest.BossWin == true then
	  GROUND:MoveInDirection(poww, Direction.Up, 18, false, 1)
	else
	  GROUND:MoveInDirection(poww, Direction.Up, 60, false, 1)
	end
	SOUND:PlayBGM("NadEvent21. Lenna.ogg", true)
	UI:SetSpeaker(poww)
	UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Powwene_1']),
	{STRINGS:Format(MapStrings['Answer_A_3']),
	STRINGS:Format(MapStrings['Answer_B_3'])}, 1, 2)
	UI:WaitForChoice()
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_2']))
	poww.Data.Nickname = 'Powwene'
	UI:SetSpeaker(poww)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_3']))
	COMMONEX.CharacterIntroduction('Introduction_Powwene')
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_4']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_5']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_6']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_7']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_8']))
	GROUND:CharAnimateTurn(poww, Direction.Left, 4, true)
	GROUND:MoveInDirection(poww, Direction.Left, 30, false, 1)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_9']))
	GROUND:CharAnimateTurn(poww, Direction.Up, 4, false)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_10']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_11']))
	GROUND:MoveInDirection(poww, Direction.Up, 75, false, 3)
	GAME:CutsceneMode(false)
	GROUND:TeleportTo(poww, 316, 316, Direction.Down)
	SV.global_quest.StoryProgression = 8
  elseif SV.global_quest.StoryProgression > 7 then
    GROUND:RemoveCharacter("Enemy1")
	GROUND:RemoveCharacter("Enemy2")
  else
    GROUND:Hide("Enemy1")
    GROUND:Hide("Enemy2")
  end
  if SV.global_quest.StoryProgression == 3 then
    SV.checkpoint = 
    {
      Zone    = 'td_throwback_land', Segment  = -1,
      Map  = 0, Entry  = 0
    }
    GAME:CutsceneMode(true)
	local player=CH("PLAYER")
    local vitaro=CH("Vitaro")
    UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_0']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_1']))
    GAME:FadeIn(20)
	UI:SetSpeaker(vitaro)
	UI:SetSpeakerEmotion("Happy")
	UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Vitaro_2']),
	{STRINGS:Format(MapStrings['Answer_A_1']),
	STRINGS:Format(MapStrings['Answer_B_1'])}, 1, 2)
	GROUND:CharAnimateTurn(player, Direction.Right, 4, true)
	UI:WaitForChoice()
	result = UI:ChoiceResult()
	if result == 2 then
	  UI:SetSpeakerEmotion("Surprised")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_2_1']))
	end
	UI:SetSpeakerEmotion("Worried")
	UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Vitaro_3']),
	{STRINGS:Format(MapStrings['Answer_A_2']),
	STRINGS:Format(MapStrings['Answer_B_2'])}, 1, 2)
	UI:WaitForChoice()
	result = UI:ChoiceResult()
	if result == 1 then
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_4_1']))
	  UI:SetSpeakerEmotion("Sad")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_4_2']))
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_4_3']))
	else
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_5_1']))
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_5_2']))
	end
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_6']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Vitaro_7']))
	GROUND:MoveInDirection(vitaro, Direction.Up, 80, false, 2)
	SV.global_quest.StoryProgression = 4
	GROUND:CharAnimateTurn(player, Direction.Down, 4, false)
	GAME:CutsceneMode(false)
  end
  if SV.global_quest.StoryProgression == 28 then
    local abigail = CH("Abigail")
	local missy = CH("Missy")
	local gapori = CH("Gapori")
	GROUND:Unhide("Abigail")
	GROUND:Unhide("Missy")
	GAME:CutsceneMode(true)
	UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
	SOUND:PlayBattleSE("TB_EVT_LongFall")
	UI:WaitShowTimedDialogue(STRINGS:Format(MapStrings['Abigail_0']),150)
	GAME:WaitFrames(60)
	SOUND:PlayBattleSE("TB_EVT_Land")
	GAME:FadeIn(20)
	abigail.Data.Nickname = "Zigzagoon"
	missy.Data.Nickname = "Misdreavus"
	UI:SetSpeaker(abigail)
	UI:SetSpeakerEmotion("Pain")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Abigail_1']))
	UI:SetSpeakerEmotion("Surprised")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Abigail_2']))
	GROUND:CharAnimateTurn(missy, Direction.Left, 4, false)
	GROUND:CharAnimateTurn(abigail, Direction.Right, 4, true)
	UI:SetSpeaker(missy)
	UI:SetSpeakerEmotion("Determined")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Missy_0']))
	UI:SetSpeaker(abigail)
	UI:SetSpeakerEmotion("Determined")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Abigail_3']))
	UI:SetSpeaker(missy)
	UI:SetSpeakerEmotion("Angry")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Missy_1']))
	GROUND:MoveInDirection(CH("PLAYER"), Direction.Up, 12, false, 2)
	GROUND:CharAnimateTurn(CH("PLAYER"), Direction.Down, 4, true)
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_11']))
	abigail.Data.Nickname = "Abigail"
	UI:SetSpeaker(abigail)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Abigail_4']))
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Abigail_5']))
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_12']))
	UI:SetSpeaker(abigail)
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Abigail_6']))
	UI:SetSpeaker(missy)
	UI:SetSpeakerEmotion("Shouting")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Missy_2']))
	UI:SetSpeakerEmotion("Surprised")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Missy_3']))
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Sad")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_3']))
	missy.Data.Nickname = "Missy"
	UI:SetSpeaker(missy)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Missy_4']))
	GAME:FadeOut(false, 20)
	GROUND:Hide("Abigail")
	GROUND:Hide("Missy")
	GAME:CutsceneMode(false)
	GAME:FadeIn(20)
	SV.global_quest.StoryProgression = 29
  end
  GROUND:Hide("Vitaro")
  if SV.global_quest.StoryProgression > 11 and SV.sidequest.quest03 < 4 then
	GROUND:Hide("Teddiursa")
  end
  GAME:FadeIn(20)
end

---CURMAPSCR.Exit
--Engine callback function
function amusement_park.Exit(map)


end

---CURMAPSCR.Update
--Engine callback function
function amusement_park.Update(map)


end

---CURMAPSCR.GameSave
--Engine callback function
function amusement_park.GameSave(map)


end

---CURMAPSCR.GameLoad
--Engine callback function
function amusement_park.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function amusement_park.Sign_Crafting_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sign_Crafting']))
end

function amusement_park.Sign_Activities_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sign_Activities']))
end

function amusement_park.Sign_Museum_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sign_Museum']))
end

function amusement_park.Sign_Shop_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sign_Shop']))
end

function amusement_park.Sign_Box_Action(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sign_Box']))
end

function amusement_park.Indeedee_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Indeedee_0']))
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Indeedee_1']))
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Indeedee_2']))
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Indeedee_3']))
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Indeedee_4']))
  UI:SetSpeakerEmotion("Inspired")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Indeedee_5']))
end

function amusement_park.ARaichu_Action(chara, activator)
  local gapori = CH("Gapori")
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['ARaichu_0']))
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['ARaichu_1']))
  UI:SetSpeaker(gapori)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_4']))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['ARaichu_2']))
  UI:SetSpeaker(gapori)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_5']))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['ARaichu_3']))
  UI:SetSpeaker(gapori)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_6']))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['ARaichu_4']))
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_6']))
end

function amusement_park.NorthExit_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  GAME:FadeOut(false, 20)
  if SV.global_quest.StoryProgression > 21 then
    GAME:EnterGroundMap("amusement_castle_ruins", "Entrance")
  else
    GAME:EnterGroundMap("amusement_castle", "Entrance")
  end
end

function amusement_park.SouthExit_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  if SV.global_quest.StoryProgression > 7 then
    GAME:FadeOut(false, 20)
    GAME:EnterGroundMap("overworld", "Spawn_0")
  elseif SV.global_quest.StoryProgression == 6 then
    GAME:CutsceneMode(true)
    local e1=CH("Enemy1")
	local e2=CH("Enemy2")
	local player=CH("PLAYER")
	e1.CollisionDisabled = true
	e2.CollisionDisabled = true
	GROUND:TeleportTo(e1, 380, 866, Direction.Up)
	GROUND:TeleportTo(e2, 396, 866, Direction.Up)
	GROUND:Unhide("Enemy1")
    GROUND:Unhide("Enemy2")
	local coro1 = TASK:BranchCoroutine(function() amusement_park.Move1(e1) end)
	local coro2 = TASK:BranchCoroutine(function() amusement_park.Move1(e2) end)
	SOUND:PlayBGM("NadEvent15. Hurry! Hurry!.ogg", true)
	GROUND:CharSetEmote(player, "shock", 1)
	SOUND:PlayBattleSE("EVT_Emote_Shock")
	GROUND:AnimateInDirection(player, "Hurt", Direction.Down, Direction.Up, 24, 2, 2)
	TASK:JoinCoroutines({coro1,coro2})
	GAME:WaitFrames(48)
	UI:ResetSpeaker()
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_0']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_1']))
	GAME:FadeOut(false, 20)
	SV.global_quest.BossWin = false
	GAME:CutsceneMode(false)
	GAME:EnterDungeon('td_throwback_land', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, false, false)
  end
end

function amusement_park.Move1(character)
  GROUND:MoveInDirection(character, Direction.Up, 24, false, 1)
end

function amusement_park.Move2(character)
  GROUND:MoveInDirection(character, Direction.Up, 48, false, 1)
end

function amusement_park.EnemySweat(character)
  GROUND:CharSetEmote(character, "sweating", 1)
end

function amusement_park.Hoppip_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  local quest_ = SV.sidequest.quest03
  if quest_ > 3 then
    UI:SetSpeakerEmotion("Happy")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hoppip_3']))
  elseif quest_ == 1 then
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hoppip_1']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hoppip_2']))
	GAME:FadeOut(false, 20)
	quest_ = 2
	GROUND:Hide("Hoppip")
	GAME:FadeIn(20)
  else
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hoppip_0']))
  end
  SV.sidequest.quest03 = quest_
end

function amusement_park.Hattrem_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  local questname = "Corvirevenge"
  local quest_ = SV.sidequest.quest04
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression > 25 then
    if quest_ == 0 then
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_4']))
	  UI:SetSpeakerEmotion("Worried")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_5']))
	  UI:SetSpeakerEmotion("Normal")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_6']))
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_7']))
	  quest_ = 1
	  COMMONEX.SidequestAccept(questname)
	else
	  if quest_ == 3 then
	    UI:SetSpeakerEmotion("Happy")
		UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_10']))
	  elseif quest_ == 2 then
	    UI:SetSpeakerEmotion("Joyous")
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_8']))
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_9']))
		COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("gummi_wonder"),true,false)
		COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("held_life_orb"),true,false)
		COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("tm_bulldoze"),true,false)
	    COMMONEX.PointIncrease(8)
	    quest_ = 3
	    COMMONEX.SidequestCleared(questname)
	  else
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_6']))
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_7']))
	  end
	end
  else
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_0']))
	UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_1']))
	UI:SetSpeakerEmotion("Shouting")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_2']))
	UI:SetSpeakerEmotion("Sad")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Hattrem_3']))
  end
  SV.sidequest.quest04 = quest_
end

function amusement_park.Powwene_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Powwene_12']))
end

function amusement_park.Mimikyu_Action(chara, activator)
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_7']))
end

function amusement_park.Beldum_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Beldum_0']))
end

function amusement_park.Sandslash_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression > 7 then
    UI:SetSpeakerEmotion("Determined")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sandslash_2']))
  else
    UI:SetSpeakerEmotion("Angry")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sandslash_0']))
	UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sandslash_1']))
  end
end

function amusement_park.Slakoth_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression > 23 then
    local gapori = CH("Gapori")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Slakoth_1']))
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_10']))
	UI:SetSpeaker(chara)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Slakoth_2']))
  else
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Slakoth_0']))
  end
end

function amusement_park.Teddiursa_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.sidequest.quest03 > 3 then
    UI:SetSpeakerEmotion("Sigh")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Teddiursa_1']))
  else
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Teddiursa_0']))
  end
end

function amusement_park.Torchic_Action(chara, activator)
  local questname = "Missing Teddy Bear"
  local quest_ = SV.sidequest.quest03
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if quest_ > 3 then
    UI:SetSpeakerEmotion("Happy")
	if quest_ == 4 then
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_8']))
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_9']))
	  COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("evo_fire_stone"),true,false)
	  COMMONEX.PointIncrease(3)
	  quest_ = 5
	  COMMONEX.SidequestCleared(questname)
	else
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_10']))
	end
  elseif SV.global_quest.StoryProgression > 11 then
    if quest_ == 0 then
	  UI:SetSpeakerEmotion("Shouting")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_1']))
	  UI:SetSpeakerEmotion("Teary-Eyed")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_2']))
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_3']))
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_4']))
	  UI:SetSpeakerEmotion("Shouting")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_5']))
	  quest_ = 1
	  COMMONEX.SidequestAccept(questname)
	else
	  UI:SetSpeakerEmotion("Crying")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_6']))
	  UI:SetSpeakerEmotion("Surprised")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_7'], SV.playername))
	end
  else
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Torchic_0']))
  end
  SV.sidequest.quest03 = quest_
end

function amusement_park.Flaaffy_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Flaaffy_0']))
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Flaaffy_1']))
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Flaaffy_2']))
end

function amusement_park.Girafarig_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression > 23 then
    local gapori = CH("Gapori")
	UI:SetSpeaker(chara)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Girafarig_1']))
	UI:SetSpeaker(gapori)
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_7']))
	UI:SetSpeaker(chara)
	UI:SetSpeakerEmotion("Joyous")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Girafarig_2']))
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Surprised")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_8']))
  else
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Girafarig_0']))
  end
end

function amusement_park.Aron_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression > 23 then
    local gapori = CH("Gapori")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Aron_1']))
	UI:SetSpeaker(gapori)
	UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Gapori_9']))
  else
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Aron_0']))
  end
end

function amusement_park.Bayleef_Davi_Action(chara, activator)
  local grumpig = CH('Grumpig')
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Bayleef_Davi_0']))
  GROUND:CharTurnToChar(grumpig,chara)
  UI:SetSpeaker(grumpig)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_1']))
end

function amusement_park.Cradily_Davi_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Cradily_Davi_0']))
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Message_4']))
end

function amusement_park.Tinkaton_Action(chara, activator)
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Tinkaton_0']))
end

function amusement_park.Corviknight_0_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))  
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Corviknight_0_0']))
end

function amusement_park.Corviknight_1_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Corviknight_1_0']))
end

function amusement_park.Grumpig_Action(chara, activator)
  local questname = "Siblings Peace"
  local quest_ = SV.sidequest.quest02
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.global_quest.StoryProgression > 11 then
    if quest_ < 3 then
	  local item_slot = GAME:FindPlayerItem('held_friend_bow',false,true)
	  if quest_ == 0 then
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_2']))
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_3']))
	  end
	  if quest_ > 0 and quest_ < 3 and item_slot:IsValid() then
	    if quest_ == 2 then
		  UI:SetSpeakerEmotion("Joyous")
	      UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_6']))
		  UI:SetSpeakerEmotion("Inspired")
		  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_7']))
		  GAME:FadeOut(true, 60)
		  GAME:FadeIn(20)
		  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_8']))
		  COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("berry_tanga"),false,false)
		  COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("berry_persim"),false,false)
		  COMMON.GiftItemFull(CH('PLAYER'), RogueEssence.Dungeon.InvItem("boost_hp_up"),false,false)
	      COMMONEX.PointIncrease(3)
		  COMMONEX.SidequestCleared(questname)
		end
		if quest_ == 1 then
		  UI:SetSpeakerEmotion("Happy")
	      UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_5']))
		end
		quest_ = quest_+1
		GAME:TakePlayerBagItem(item_slot.Slot)
	  else
	    UI:SetSpeakerEmotion("Sad")
	    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_4']))
	  end
	  if quest_ == 0 then
	    quest_ = 1
	    COMMONEX.SidequestAccept(questname)
	  end
	else
	  UI:SetSpeakerEmotion("Joyous")
	  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_9']))
	end
  else
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Grumpig_0']))
  end
  SV.sidequest.quest02 = quest_
end

function amusement_park.Spoink_L_Action(chara, activator)
  UI:SetSpeaker(chara)
  if SV.sidequest.quest02 == 3 then
    UI:SetSpeakerEmotion("Happy")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Spoink_L_1']))
  else
    UI:SetSpeakerEmotion("Determined")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Spoink_L_0']))
  end
end

function amusement_park.Spoink_R_Action(chara, activator)
  UI:SetSpeaker(chara)
  if SV.sidequest.quest02 == 3 then
    UI:SetSpeakerEmotion("Joyous")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Spoink_R_1']))
  else
    UI:SetSpeakerEmotion("Determined")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Spoink_R_0']))
  end
end

function amusement_park.Teammate1_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function amusement_park.Teammate2_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function amusement_park.Teammate3_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function amusement_park.Teammate4_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function amusement_park.Teammate5_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function amusement_park.Teammate6_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

function amusement_park.Teammate7_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  COMMON.GroundInteract(activator, chara, true)
end

return amusement_park

