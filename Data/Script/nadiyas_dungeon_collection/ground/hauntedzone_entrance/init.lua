--[[
    init.lua
    Created: 08/28/2023 12:04:06
    Description: Autogenerated script file for the map hauntedzone_entrance.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local hauntedzone_entrance = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---hauntedzone_entrance.Init(map)
--Engine callback function
function hauntedzone_entrance.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  GROUND:RefreshPlayer()

end

---hauntedzone_entrance.Enter(map)
--Engine callback function
function hauntedzone_entrance.Enter(map)
  if SV.sidequest_buneary > 1 then
    GROUND:RemoveCharacter("Buneary")
  end
  GAME:FadeIn(20)

end

---hauntedzone_entrance.Exit(map)
--Engine callback function
function hauntedzone_entrance.Exit(map)


end

---hauntedzone_entrance.Update(map)
--Engine callback function
function hauntedzone_entrance.Update(map)


end

---hauntedzone_entrance.GameSave(map)
--Engine callback function
function hauntedzone_entrance.GameSave(map)


end

---hauntedzone_entrance.GameLoad(map)
--Engine callback function
function hauntedzone_entrance.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function hauntedzone_entrance.Entrance_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  local dungeon_entrances = {'td_hauntedzone'}
  local ground_entrances = {}
  COMMON.ShowDestinationMenu(dungeon_entrances,ground_entrances)
end

function hauntedzone_entrance.Exit_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  GAME:FadeOut(false, 20)
  GAME:EnterGroundMap("overworld", "Spawn_4")
end

function hauntedzone_entrance.Sign_Action(obj, activator)
  UI:ResetSpeaker()
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Sign_0']))
end

function hauntedzone_entrance.Buneary_Action(chara, activator)
  local buneary = CH('Buneary')
  UI:ResetSpeaker()
  UI:BeginChoiceMenu(STRINGS:Format(MapStrings['Narration_0']),
	{STRINGS:Format(MapStrings['ActionChoice_0']),
	STRINGS:Format(MapStrings['ActionChoice_1']),
	STRINGS:Format(MapStrings['ActionChoice_2'])}, 1, 1)
  UI:WaitForChoice()
  result = UI:ChoiceResult()
  UI:SetSpeaker(buneary)
  UI:SetSpeakerEmotion("Shouting")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Buneary_0']))
  GROUND:MoveInDirection(buneary, Direction.Up, 30, true, 4)
  GROUND:RemoveCharacter("Buneary")
  UI:ResetSpeaker()
  if result == 3 then
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Narration_1B']))
  else
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Narration_1A']))
  end
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Narration_2']))
  SV.sidequest_buneary = 2
  GAME:UnlockDungeon('td_hauntedzone')
end

function hauntedzone_entrance.Chespin_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format(MapStrings['Chespin_0']))
end

function hauntedzone_entrance.Litwick_Action(chara, activator)
  GROUND:CharTurnToChar(chara,CH('PLAYER'))
  UI:SetSpeaker(chara)
  if SV.sidequest_buneary < 3 then
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['Litwick_0']))
  else
    UI:SetSpeakerEmotion("Surprised")
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['Litwick_1']))
  end
end

return hauntedzone_entrance

