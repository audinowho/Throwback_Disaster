--[[
    init.lua
    Created: 11/09/2022 15:45:19
    Description: Autogenerated script file for the map crystal_cave_entrance.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local crystal_cave_entrance = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---CURMAPSCR.Init
--Engine callback function
function crystal_cave_entrance.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  SV.wipedout = false

end

---CURMAPSCR.Enter
--Engine callback function
function crystal_cave_entrance.Enter(map)
  
  if SV.global_quest.StoryProgression == 0 then
    GAME:UnlockDungeon('nad_crystal_cave')
    SOUND:PlayBattleSE("TB_EVT_Fall")
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['String_0']))
	SOUND:PlayBattleSE("TB_EVT_Land")
    GAME:FadeIn(20)
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['String_1']))
	UI:WaitShowDialogue(STRINGS:Format(MapStrings['String_2']))
	SV.global_quest.StoryProgression = 1
	GAME:CutsceneMode(false)
  else
    GAME:FadeIn(20)
  end

end

---CURMAPSCR.Exit
--Engine callback function
function crystal_cave_entrance.Exit(map)


end

---CURMAPSCR.Update
--Engine callback function
function crystal_cave_entrance.Update(map)


end

---CURMAPSCR.GameSave
--Engine callback function
function crystal_cave_entrance.GameSave(map)


end

---CURMAPSCR.GameLoad
--Engine callback function
function crystal_cave_entrance.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function crystal_cave_entrance.Stairs_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  local zone = _DATA.DataIndices[RogueEssence.Data.DataManager.DataType.Zone]:Get('guildmaster_trail')
  UI:ChoiceMenuYesNo(STRINGS:Format(MapStrings['String_4']), false)
  UI:WaitForChoice()
  ch = UI:ChoiceResult()
  if ch then
    UI:WaitShowDialogue(STRINGS:Format(MapStrings['String_3']))
    GAME:FadeOut(false, 20)
    GAME:EnterDungeon('nad_crystal_cave', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, false, true)
  end
end

return crystal_cave_entrance

